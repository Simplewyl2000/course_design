#include<stdio.h>
typedef int INTEGER; 
typedef INTEGER int16; 

char mybuf2[800];

static int16 do_poll(struct pllfd *pfd,unsigned int nfds,int16 timeout)
	{
	   int16 ret;
	   ret=poll(pfd,nfds,timeout);
	   if (ret<0){
	      if(errno==EINTR)
	         return 0;
	       {log(LOG_ERR,¡±poll returned an error!\n¡±)};
	       return -1;
	   }
	   if (ret==0)
	       return 0;
	    return 1;
	 }


int main(int argc, char *argv[])
{
	HANDLE hHeap;
	char *buf1, *buf2;
	int i;

for(int i=0;i<40;i++){
 mybuf2[i]=¡¯a¡¯;
}
    LoadLibrary("user32");
	hHeap=HeapCreate(HEAP_GENERATE_EXCEPTIONS, 0x10000, 0xfffff);
	buf1 =(char*) HeapAlloc(hHeap, 0, 1000);
	strcpy(buf1,mybuf2);
	buf2 =(char*) HeapAlloc(hHeap, 0, 200);
	HeapFree(hHeap, 0, buf1);
	HeapFree(hHeap, 0, buf2);
	return 0;
}
