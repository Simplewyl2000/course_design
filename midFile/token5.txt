 ID ID DIGIT ID < ID ID ID > ID < ID ID ID > ID < ID ID ID > INT ID ( ) { ID * ID ; ID = ID ( , STRING ) ; UNSIGNED SHORT ID ; ID ( ( UNSIGNED INT ) ID ( ID ) ) ; UNSIGNED SHORT ID ; UNSIGNED SHORT ID [ ] ; INT ID ; FOR ( ID = ; ID != ID ; ID ++ ) { ID = ID ( ) ) ; FOR ( ID = DIGIT ; ID < ID ; ID ++ ) { IF ( ID [ ID ] == ID ) CONTINUE ; } ID ( ID , STRING , ID ) ; ID [ ID ] = ID ; } ID ( ) ; ID ( ID ) ; } INT ID ( CONST CHAR * ID ) { ID = ID ; IF ( ID == ID ) / / / / / / / / / / / / / / / / RETURN DIGIT ; IF ( ID [ DIGIT ] == DIGIT && ID [ DIGIT ] != DIGIT ) / / / / / / / / DIGIT DIGIT RETURN DIGIT ; UNSIGNED ID = DIGIT ; ID ID = ID ; / / / / / / / / / / / / / / / / / / / / / / / IF ( ID [ ID ] == - || ID [ ID ] == + ) / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / { ID = ( ID [ ID ] == - ) ) ID ID ID ; ID ++ ; } LONG LONG ID = DIGIT ; / / / / / / / / / / / / / / / / / / / / / WHILE ( ID [ ID ] != DIGIT ) { CHAR ID = ID [ ID ++ ] ; IF ( ID >= DIGIT && ID <= DIGIT ) { ID = ID * DIGIT + ( ID - DIGIT ) ; IF ( ID ) / / / / / / / / / / / / / / / / / { IF ( ID - DIGIT > ID < INT > > > ID ( ) ) RETURN DIGIT ; } ELSE / / / / / / / / / / / / / / / / / { IF ( ID > ID < INT > > > ID ( ) ) RETURN DIGIT ; } } ELSE { RETURN DIGIT ; } } ID = ID ; / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / RETURN ID ID ( INT ) ( - ID ) ) ( INT ) ID ; } INT ID ( CONST CHAR * ID ) { ID = ID ; IF ( ID == ID ) / / / / / / / / / / / / / / / / RETURN DIGIT ; IF ( ID [ DIGIT ] == DIGIT && ID [ DIGIT ] != DIGIT ) / / / / / / / / DIGIT DIGIT RETURN DIGIT ; UNSIGNED ID = DIGIT ; ID ID = ID ; / / / / / / / / / / / / / / / / / / / / / / / IF ( ID [ ID ] == - || ID [ ID ] == + ) / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / { ID = ( ID [ ID ] == - ) ) ID ID ID ; ID ++ ; } LONG LONG ID = DIGIT ; / / / / / / / / / / / / / / / / / / / / / WHILE ( ID [ ID ] != DIGIT ) { CHAR ID = ID [ ID ++ ] ; IF ( ID >= DIGIT && ID <= DIGIT ) { ID = ID * DIGIT + ( ID - DIGIT ) ; IF ( ID ) / / / / / / / / / / / / / / / / / { IF ( ID - DIGIT > ID < INT > > > ID ( ) ) RETURN DIGIT ; } ELSE / / / / / / / / / / / / / / / / / { IF ( ID > ID < INT > > > ID ( ) ) RETURN DIGIT ; } } ELSE { RETURN DIGIT ; } } ID = ID ; / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / RETURN ID ID ( INT ) ( - ID ) ) ( INT ) ID ; } 