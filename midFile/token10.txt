 ID ID DIGIT ID < ID ID ID > ID < ID ID ID > ID < ID ID ID > INT ID ( ) { ID * ID ; ID = ID ( @-2 @-7 @-2 , STRING ) ; UNSIGNED SHORT ID ; ID ( ( UNSIGNED INT ) ID ( ID ) ) ; UNSIGNED SHORT ID ; UNSIGNED SHORT ID [ @-7 ] ; INT ID ; FOR ( ID = @-7 ; ID != ID ; ID ++ ) { ID = ID ( ) ) @-7 ; FOR ( ID = DIGIT ; ID < ID ; ID ++ ) { IF ( ID [ ID ] == ID ) CONTINUE ; } ID ( ID , STRING , ID ) ; ID [ ID ] = ID ; } ID ( @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-7 @-7 @-7 @-7 @-2 ) ; ID ( ID ) ; } INT ID ( CONST CHAR * ID ) { ID = ID ; IF ( ID == ID ) / / / / / / / RETURN DIGIT ; IF ( ID [ DIGIT ] == @-4 DIGIT @-4 && ID [ DIGIT ] != @-4 DIGIT @-4 ) / / / / @-4 DIGIT @-4 @-4 @-4 @-4 @-4 @-4 @-4 @-4 @-4 @-4 @-2 DIGIT @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 RETURN DIGIT ; UNSIGNED ID = DIGIT ; ID ID = ID ; / / / / / / / / / IF ( ID [ ID ] == @-4 - @-4 || ID [ ID ] == @-4 + @-4 ) / / / / / / / / / / / / / / / / / / / / { ID = ( ID [ ID ] == @-4 - @-4 ) ) ID ID ID ; ID ++ ; } LONG LONG ID = DIGIT ; / / / / / / / / / WHILE ( ID [ ID ] != @-4 DIGIT @-4 ) { CHAR ID = ID [ ID ++ ] ; IF ( ID >= @-4 DIGIT @-4 && ID <= @-4 DIGIT @-4 ) { ID = ID * DIGIT + ( ID - @-4 DIGIT @-4 ) ; IF ( ID ) / / / / / / / { IF ( ID - DIGIT > ID < INT > > > ID ( ) ) RETURN DIGIT ; } ELSE / / / / / / / { IF ( ID > ID < INT > > > ID ( ) ) RETURN DIGIT ; } } ELSE { RETURN DIGIT ; } } ID = ID ; / / / / / / / / / / / / / / / / / / / / RETURN ID ID ( INT ) ( - ID ) ) ( INT ) ID ; } INT ID ( CONST CHAR * ID ) { ID = ID ; IF ( ID == ID ) / / / / / / / RETURN DIGIT ; IF ( ID [ DIGIT ] == @-4 DIGIT @-4 && ID [ DIGIT ] != @-4 DIGIT @-4 ) / / / / @-4 DIGIT @-4 @-4 @-4 @-4 @-4 @-4 @-4 @-4 @-4 @-4 @-2 DIGIT @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 @-2 RETURN DIGIT ; UNSIGNED ID = DIGIT ; ID ID = ID ; / / / / / / / / / IF ( ID [ ID ] == @-4 - @-4 || ID [ ID ] == @-4 + @-4 ) / / / / / / / / / / / / / / / / / / / / { ID = ( ID [ ID ] == @-4 - @-4 ) ) ID ID ID ; ID ++ ; } LONG LONG ID = DIGIT ; / / / / / / / / / WHILE ( ID [ ID ] != @-4 DIGIT @-4 ) { CHAR ID = ID [ ID ++ ] ; IF ( ID >= @-4 DIGIT @-4 && ID <= @-4 DIGIT @-4 ) { ID = ID * DIGIT + ( ID - @-4 DIGIT @-4 ) ; IF ( ID ) / / / / / / / { IF ( ID - DIGIT > ID < INT > > > ID ( ) ) RETURN DIGIT ; } ELSE / / / / / / / { IF ( ID > ID < INT > > > ID ( ) ) RETURN DIGIT ; } } ELSE { RETURN DIGIT ; } } ID = ID ; / / / / / / / / / / / / / / / / / / / / RETURN ID ID ( INT ) ( - ID ) ) ( INT ) ID ; } 